#! /bin/sh
### BEGIN INIT INFO
# Provides:		  rc.local
# Required-Start:	$local_fs $remote_fs $network $syslog $all
# Required-Stop:
# Default-Start:	 2 3 4 5
# Default-Stop:
# Short-Description: Run /etc/rc.local if it exist
### END INIT INFO

. /lib/lsb/init-functions

PATH=/sbin:/usr/sbin:/bin:/usr/bin

RUN_USER=amigo
LOGFILE=/var/log/ros/autoroslaunch.log
PIDFILE=/var/run/ros/autoroslaunch.pid

mkdir -p /var/run/ros/
chown -R $RUN_USER /var/run/ros/

mkdir -p /var/log/ros/
chown -R $RUN_USER /var/log/ros/

do_start() 
{
	date > /tmp/autoroslaunch
	if [ -s $PIDFILE ] && kill -0 $(cat $PIDFILE) 2>/dev/null; then
		log_daemon_msg "apparently already running"
		log_end_msg 0
		exit 0
	fi
	
	log_daemon_msg "Starting autoroslaunch daemon"

	echo "starting autoroslaunch daemon" >>$LOGFILE
	date >>$LOGFILE
	echo "-------------------------" >>$LOGFILE

	if [ "$(hostname)" = "sergio1" ]; then
		su $RUN_USER -s /bin/bash -c "screen -d -m -S sstart ~/.tue/installer/targets/sergio1/autolaunch.sh $PIDFILE sergio_bringup start.launch 2>&1 >>/dev/null" &
	elif [ "$(hostname)" = "sergio2" ]; then
		su $RUN_USER -s /bin/bash -c "screen -d -m -S hstart ~/.tue/installer/targets/sergio1/autolaunch.sh $PIDFILE sergio_bringup hardware.launch 2>&1 >>/dev/null" &
	else
		log_daemon_msg "Don't know what to do"
		exit 4
	fi
	
	echo "autoroslaunch started" >>$LOGFILE
}

do_stop() 
{
	log_daemon_msg "Stopping autoroslaunch"
	if [ -s $PIDFILE ]; then
		kill `cat $PIDFILE`
	fi
	log_end_msg $?
	rm -f $PIDFILE
}

case "$1" in
	start)
		do_start
		;;
	restart|reload|force-reload)
		do_stop
		do_start
		;;
	stop)
		do_stop
		;;
	*)
		echo "Usage: sudo service autoroslaunch start|stop|restart" >&2
		exit 3
		;;
esac
